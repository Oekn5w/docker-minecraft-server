name: Build and publish multiarch
on:
  push:
    branches:
      - multiarch
      - multiarch-latest
      - java15
      - java16
      - test/multiarch/*
    tags:
      - "[0-9]+.[0-9]+.[0-9]+-multiarch"
      - "[0-9]+.[0-9]+.[0-9]+-multiarch-latest"
      - "[0-9]+.[0-9]+.[0-9]+-java15"
      - "[0-9]+.[0-9]+.[0-9]+-java16"
    paths-ignore:
      - "*.md"
      - "docs/**"
      - "examples/**"

jobs:
  docker-buildx:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=itzg/minecraft-server
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=${GITHUB_REF#refs/heads/}
            if [[ $VERSION == master ]]; then
              VERSION=latest
            fi
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION//\//-}"
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=cache_from::${TAGS}
          echo ::set-output name=version::${VERSION//\//-}
          echo ::set-output name=cache_version::${VERSION//\//-}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ steps.prep.outputs.cache_version }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ steps.prep.outputs.cache_version }}-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.1.0

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2.4.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          # ensure latest base image is used
          pull: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          labels: |
            org.opencontainers.image.documentation=https://github.com/itzg/docker-minecraft-server
            org.opencontainers.image.source=https://github.com/itzg/docker-minecraft-server
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
